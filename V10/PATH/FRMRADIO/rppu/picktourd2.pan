# Módulo   : PICKTOURD2.PAN
# Función  : Formulario de movimiento de stock parcial asignado a recurso
#            Pantalla de lectura articulo y lote.
#
# Creación : 31-03-2009
# Autor    : RFD
###########################################
# Histórico de cambios:
#
PICKING TOUR
_10_______ _10_______ 
PICKING TOUR (DESTINO)                  

PALLET: __________________

ARTICULO: _20________________
_40__________________________

CAJAS(@@L@): @L@@@  
PICO:        @L@@@  

DESTINO: _________________

DESTINO: _________________
|

PREQUERY=FEJECUTA("CSELMOVDEST","\n ERROR OBTENIENDO\n DATOS DEL MOVIMIENTO",
                  "CPRESENTA","",FCOMMIT,"",
                  "+CSELLONGERROR","CSELLONERROR","+CCANTIDAD","CCANTIDAD",
                  FPOSICIONACAMPO(FSUCCESS,"CODUBIDEST"),"")

POSTQUERY=FEJECUTA(FIF("CSELNOTNULL",FPOSICIONABLOQUE("-1"),
                                     FSUCCESS),"",
                   "CVERIFICAUBI","\n UBICACION INCORRECTA", 
                   "CVERERROR",":V10ERROR", 
                   FIF(FEJECUTAMOVSYNC("ACTSTKORIGEN","ACTSTKDESTINO",":CODMOV",":CODRECURSO"),
                       FSUCCESS,
                       FEJECUTA("+CDIVIDEERROR","",FFAILURE," ERROR\n :MSGERROR")),"",
                   FCOMMIT,"",
                   FIF("CSIGMOV",
                       FEJECUTA(FLIMPIABLOQUE("PICKTOURD2.PAN"),"",
                                FPOSICIONABLOQUE("PICKTOURD2.PAN"),""),
                       FEJECUTA("CQUITACONTE","\n NO SE PUEDE\n ACTUALIZAR RECURSO",				
                                FCOMMIT,"\n ERROR\n HACIENDO COMMIT",	
					            FPOSICIONABLOQUE("-1"),"")),"")


# DEFINICION DE CAMPOS
CAMPO=CODRECURSO,VIRTUAL,NOENTER
CAMPO=CODOPE,VIRTUAL,NOENTER
CAMPO=CODMOV,VIRTUAL,OCULTO
CAMPO=CODMAT,VIRTUAL,NOENTER
CAMPO=CODARTT,NOENTER
CAMPO=DESARTT,NOENTER
CAMPO=UNIEMB,NOENTER
CAMPO=CAJAS,NOENTER
CAMPO=PICO,NOENTER
CAMPO=CANTIDAD,OCULTO,"@@@@@"
CAMPO=PINTAUBID,NOENTER
CAMPO=CODUBIORIGT,OCULTO,"_12_"
CAMPO=CODUBIDESTT,OCULTO,"_12_"
CAMPO=CODUBIDEST,SCAN,AUTOENTER,POSTCHANGE=FEJECUTA(FFUERZASCAN("UBI"),"\n ERROR\n DEBE LEER\n LA UBICACION")
CAMPO=CODART,OCULTO,"______________"
CAMPO=CODMATORI,OCULTO,"_18_"
CAMPO=MSGERROR,OCULTO,"_512_"
CAMPO=LONGERROR,OCULTO,"@@@"
CAMPO=CODUBIORI,OCULTO,"_12_"
CAMPO=CODMATDEST,OCULTO,"_18_"


# DEFINICION DE CURSORES

CURSOR=CSELNOTNULL SELECT :CODUBIDEST FROM DUAL WHERE :CODUBIDEST IS NULL;

                    
CURSOR=CSELMOVDEST SELECT  MOV.CODMOV,MOV.CODUBIORI CODUBIORIGT,MOV.CODART CODARTT, MOV.CODMATORI, MOV.CODUBIDEST CODUBIDESTT,
                           MOV.CODUBIDEST PINTAUBID,MOV.UNIEMB,ART.DESART DESARTT,
						   MOV.CANTIDAD CANTIDAD, MOV.CODUBIORI, MOV.CODMATDEST,
                           FLOOR(MOV.CANTIDAD/MOV.UNIEMB) CAJAS, 
                           MOD(MOV.CANTIDAD,MOV.UNIEMB) PICO
                     FROM VDMOVIM MOV, VDARTIC ART,VDUBICA UBI,VDUBICA UBO
                    WHERE MOV.CODMOV = :CODMOV
					      AND MOV.CODMATORI != MOV.CODMATDEST
                          AND MOV.CODART=ART.CODART
                          AND MOV.CODUBIDEST=UBI.CODUBI AND MOV.CODUBIORI=UBO.CODUBI
                    ORDER BY CASE WHEN UBO.CODAREA IN ('DEVOLUCION','RECEPCION','INTERDEV') THEN UBI.ORDENSALIDA ELSE UBI.ORDENMOVIM END;

CURSOR=CPRESENTA UPDATE VDMOVIM MOV SET STATUS=VDST.FMOVPRESENTADO
                  WHERE MOV.CODMATORI != MOV.CODMATDEST
                          AND MOV.CODART=:CODARTT
                          AND MOV.CODUBIDEST=:CODUBIDESTT AND MOV.CODUBIORI=:CODUBIORIGT AND
                          MOV.STATUS BETWEEN VDST.FMOVASIGNADO AND VDST.FMOVPRESENTADO AND CODRECURSO=:CODRECURSO AND 
                          MOV.CODMATORI=:CODMAT;

CURSOR=CCANTIDAD SELECT '' CODUBIDEST FROM DUAL;

CURSOR=CSELLONGERROR SELECT VD.GETPROP('LONGITUDERROR') LONGERROR FROM DUAL;

CURSOR=CDIVIDEERROR BEGIN :MSGERROR:=VD.DIVERRORRADIO(:V10ERROR,:LONGERROR);
                    END;@

CURSOR=CSELVERIFDATOS SELECT :CODUBIDEST CODUBIDEST 
                        FROM DUAL 
                       WHERE :CODUBIDEST=:CODUBIDESTT; 

                                

CURSOR=CVERIFICAUBI BEGIN
                   IF NVL(:CODUBIDESTT,' ')!=NVL(:CODUBIDEST,' ') THEN 
                         :V10ERROR:='\n UBICACION INCORRECTA\n LEIDO :CODUBIDEST\n ESPERADO :CODUBIDESTT';
                     ELSE
                      :V10ERROR:='';
                   END IF;
                 END;@

CURSOR=CSIGMOV SELECT MOV.CODMOV
                 FROM VDMOVIM MOV,VDRECURSO REC,VDUBICA UBD,VDUBICA UBI
                WHERE MOV.STATUS=VDST.FMOVASIGNADO
                      AND MOV.CODMATORI != MOV.CODMATDEST
                      AND MOV.CODRECURSO=:CODRECURSO AND MOV.CODUBIDEST=UBD.CODUBI
                      AND MOV.CODRECURSO=REC.CODRECURSO AND MOV.CODUBIORI=UBI.CODUBI
                ORDER BY CASE WHEN UBI.CODAREA IN ('DEVOLUCION','RECEPCION','INTERDEV') THEN UBD.ORDENSALIDA ELSE UBD.ORDENMOVIM END;

CURSOR=CVERERROR SELECT :V10ERROR FROM DUAL WHERE :V10ERROR IS NULL;


CURSOR=CQUITACONTE UPDATE VDRECURSO SET CODMAT=NULL WHERE CODRECURSO=:CODRECURSO;
				   