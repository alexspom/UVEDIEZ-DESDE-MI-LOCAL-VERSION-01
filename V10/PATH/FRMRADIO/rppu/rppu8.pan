#
PICKING TOUR
_10_______ _10_______ 
PICKING TOUR (DESTINO)                  

PALLET: __________________

ARTICULO: _20________________
_40__________________________

CAJAS(@@L@): @L@@@  
PICO:        @L@@@  

DESTINO: _20_________________

DESTINO: _20_________________

|

PREQUERY=FEJECUTA(FIF("-CSELMOVDEST",FEJECUTA("CBORRAMAT","",FPOSICIONABLOQUE("-1"),""))," ERROR OBTENIENDO\n DATOS DEL MOVIMIENTO",
                  "+CSELLONGERROR","","+CCANTIDAD","",
                  FPOSICIONACAMPO(FSUCCESS,"CODUBIDEST"),"")

POSTQUERY=FEJECUTA("CVERIFICAUBI","\n UBICACION INCORRECTA", 
                   "CVERERROR",":V10ERROR",
				   FDEPOSITASTKSYNC("ACTSTKDESTINO",":CODMOV"),"ERROR DEPOSITANDO",
				   FCOMMIT,"",
                   FPOSICIONABLOQUE("RPPU8.PAN"),"")


# DEFINICION DE CAMPOS
CAMPO=CODMOV,OCULTO,"@L@@@@@"
CAMPO=CODRECURSO,VIRTUAL,NOENTER
CAMPO=CODOPE,VIRTUAL,NOENTER
CAMPO=CODMAT,VIRTUAL,NOENTER
CAMPO=CODARTT,NOENTER
CAMPO=DESARTT,NOENTER
CAMPO=UNIEMB,NOENTER
CAMPO=CAJAS,NOENTER
CAMPO=PICO,NOENTER
CAMPO=CANTIDAD,OCULTO,"@@@@@"
CAMPO=PINTAUBID,NOENTER
CAMPO=CODUBIORIGT,OCULTO,"_12_"
CAMPO=CODUBIDESTT,OCULTO,"_12_"
CAMPO=CODUBIDEST,SCAN,AUTOENTER,POSTCHANGE=FEJECUTA(FFUERZASCAN("UBI"),"\n ERROR\n DEBE LEER\n LA UBICACION")
CAMPO=CODMATORI,OCULTO,"_18_"
CAMPO=MSGERROR,OCULTO,"_512_"
CAMPO=LONGERROR,OCULTO,"@@@"
CAMPO=CODPERFIL,VIRTUAL,OCULTO


# DEFINICION DE CURSORES

CURSOR=CSELMOVDEST SELECT  MOV.CODMOV,MOV.CODUBIORI CODUBIORIGT,MOV.CODART CODARTT, MOV.CODMATORI, MOV.CODUBIDEST CODUBIDESTT,
                           VDCLIPKG.PINTAUBICA(MOV.CODUBIDEST) PINTAUBID,MOV.UNIEMB,ART.DESART DESARTT,
                           SUM(MOV.CANTIDAD) CANTIDAD, 
                           FLOOR(SUM(MOV.CANTIDAD)/MOV.UNIEMB) CAJAS, 
                           MOD(SUM(MOV.CANTIDAD),MOV.UNIEMB) PICO
                     FROM VDMOVIM MOV, VDARTIC ART,VDUBICA UBI,VDRECURSO REC
                    WHERE MOV.STATUS=VDST.FMOVENUBIINTER
                          AND MOV.CODMATORI != MOV.CODMATDEST
                          AND MOV.CODRECURSO=:CODRECURSO
                          AND MOV.CODRECURSO=REC.CODRECURSO 
                          AND MOV.CODART=ART.CODART
                          AND MOV.CODUBIDEST=UBI.CODUBI
                    GROUP BY MOV.CODMOV,MOV.CODUBIORI,MOV.CODART,MOV.CODMATORI,MOV.CODUBIDEST,
                             MOV.UNIEMB,ART.DESART,UBI.ORDENMOVIM,ART.CODEAN
                    ORDER BY UBI.ORDENMOVIM;

CURSOR=CCANTIDAD SELECT '' CODUBIDEST FROM DUAL;

CURSOR=CHAYMAS SELECT :CAJAS FROM DUAL WHERE ((:SERVCAJA*:UNIEMB)+:SERVPICO+:DEFECTUOSO)>((:CAJAS*:UNIEMB)+:PICO);

CURSOR=CDEMENOS SELECT :CAJAS FROM DUAL WHERE ((:SERVCAJA*:UNIEMB)+:SERVPICO)<((:CAJAS*:UNIEMB)+:PICO);

CURSOR=CSELLONGERROR SELECT VD.GETPROP('LONGITUDERROR') LONGERROR FROM DUAL;

CURSOR=CDIVIDEERROR BEGIN :MSGERROR:=VD.DIVERRORRADIO(:V10ERROR,:LONGERROR);
                    END;@

CURSOR=CSELVERIFDATOS SELECT :CODUBIDEST CODUBIDEST 
                        FROM DUAL 
                       WHERE :CODUBIDEST=:CODUBIDESTT; 

CURSOR=CSIGMOV SELECT MOV.CODMOV
                 FROM VDMOVIM MOV, VDARTIC ART,VDUBICA UBI,VDRECURSO REC
                WHERE MOV.STATUS=VDST.FMOVENUBIINTER
                     AND MOV.CODMATORI != MOV.CODMATDEST
                      AND MOV.CODRECURSO=:CODRECURSO
                      AND MOV.CODRECURSO=REC.CODRECURSO 
                      AND REC.CODPERFIL=:CODPERFIL
                      AND MOV.CODART=ART.CODART
                      AND MOV.CODUBIDEST=UBI.CODUBI
                ORDER BY UBI.ORDENMOVIM;

CURSOR=CQUITACONTE UPDATE VDRECURSO SET CODMAT=NULL WHERE CODRECURSO=:CODRECURSO;

CURSOR=CVERIFICAUBI BEGIN
                   IF NVL(:CODUBIDESTT,' ')!=NVL(:CODUBIDEST,' ') THEN 
                         :V10ERROR:='\n UBICACION INCORRECTA\n LEIDO '||:CODUBIDEST||' \n ESPERADO '||:CODUBIDESTT;
                     ELSE
                      :V10ERROR:='';
                   END IF;
                 END;@

CURSOR=CVERERROR SELECT :V10ERROR FROM DUAL WHERE :V10ERROR IS NULL;
                                       
CURSOR=CBORRAMAT UPDATE VDRECURSO SET CODMAT='' WHERE CODRECURSO=:CODRECURSO;