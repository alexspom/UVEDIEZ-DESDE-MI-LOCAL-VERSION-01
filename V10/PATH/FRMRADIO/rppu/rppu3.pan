## Módulo   : RPPU3.PAN
# Función  : Formulario de movimiento de stock parcial asignado a recurso.
#            Pantalla de confirmación de cantidades
#
# Creación : 24-09-2014
# Autor    : FPD
###########################################
# Histórico de cambios:
#
PICKING TOUR (ORIGEN)
_10_______ _10_______ 
PICKING TOUR (ORIGEN) 

ORIGEN:   _20_________________

ARTICULO: _20__________________
_40____________________________
LOTE:     _20__________________

CAJAS(@L@@): @L@@@   @L@@@
PICO:        @L@@@   @L@@@

  MAS MOVIMIENTOS? _
  ( N(O), S(I),  R(ECHAZAR) )
|


PREQUERY=FEJECUTA("CSELLIMPIACAMPOS","\n ERROR\n LIMPIANDO CAMPOS",                  
                  "+CSELLONGERROR","",
                  "+CSELDEFCONFI","",
                  FIF("CESCERO",
                      "CCARGAVAL",
                      "CSELDEFECTO"),"\n ERROR\n CARGANDO VALORES\n POR DEFECTO",
                  FPOSICIONACAMPO(FSUCCESS,"OPCION"),"")


POSTQUERY=FEJECUTA("CSELOPCION","\n TECLEE\n N(o)\n S(i)\n R(echazar))",
                   FIF("CSELOPRECHAZO",
                       FEJECUTA("CPATRAS","",
                                "CUPDANO",""),
                       FEJECUTA("CCARGASTOCK","",
                                FIF("CVERIFACERO1",
                                    FPOSICIONABLOQUE("RPPU4.PAN")),"",
                                FIF("CVERIFACERO2",
                                    FPOSICIONABLOQUE("RPPU4.PAN")),"",
                                "+CREGMAS","",
                                "CERROR","\n ERROR AL CREAR\n STOCK",
                                "+CREGDEFECTUOSO","",
                                "CERROR","\n ERROR AL DESCONTAR\n DEFECTUOSOS",
                                "CDUMMY","",
                                FIF("CDEMENOS",
                                    FEJECUTA("+CREGNEGATIVA","",
                                             "CERROR","\n ERROR AL REGULARIZAR")),"",
                                FIF("CDEMENOS2",
                                    FEJECUTA("+CREGNEGATIVA2","",
                                             "CERROR","\n ERROR AL REGULARIZAR")),"",
                                "+CREGMAS1","",
                                "CERROR","\n ERROR AL CREAR\n STOCK",
                                "CUPDMOVSERV","\n ERROR TRATANDO\n CANTIDAD SERVIDA",
                                "CUPDMOVPDTE","\n ERROR ACTUALIZANDO\n MOVIMIENTO PENDIENTE",
                                FIF("CHAYCANTIDAD",FRECOGESTKSYNC("ACTSTKORIGEN",":CODMOV",":CODRECURSO"),
                                    FEJECUTA("CANULAMOV"," ERROR\n ANULANDO MOVIMIENTO",
                                             "CANULAMOVPDTE"," ERROR\n ANULANDO MOVIMIENTO\n PENDIENTE")),"ERROR AL EJECUTAR",
                                FCOMMIT," ERROR\n HACIENDO COMMIT")),"\n ERROR\n RECOGIENDO",
                   FIF("CSELOPNO",
                       FEJECUTA("CDESASIGNAMOV","\n ERROR\n QUITANDO MOVIMIENTO",
                                FCOMMIT," ERROR\n HACIENDO COMMIT",
                                FIF("CSEL2ETAPAS",FPOSICIONABLOQUE("RPPU10.PAN"),
                                                  FPOSICIONABLOQUE("RPPU8.PAN"))),FSUCCESS),"\n ERROR\n EN OPCION N",
                       FEJECUTA(FIF("CSELMOVASIG",FPOSICIONABLOQUE("RPPU1.PAN"),
                                                  FEJECUTA(FIF("CDAMEOTROMOV",FEJECUTA(+FCOMMIT,"",FPOSICIONABLOQUE("RPPU1.PAN"),"\n ERROR\n CARGANDO PANTALLA"),
                                                                              FIF("CSEL2ETAPAS",FPOSICIONABLOQUE("RPPU10.PAN"),
                                                                                                FPOSICIONABLOQUE("RPPU8.PAN"))),"")),""),"")


# DEFINICION DE CAMPOS
CAMPO=CODRECURSO,VIRTUAL,NOENTER
CAMPO=CODOPE,VIRTUAL,NOENTER
CAMPO=CODMAT,VIRTUAL,OCULTO 
CAMPO=CODMOV,VIRTUAL,OCULTO
CAMPO=PINTAUBI,VIRTUAL,NOENTER
CAMPO=CODMATORI,VIRTUAL,OCULTO
CAMPO=CODUBIORI,VIRTUAL,OCULTO
CAMPO=CODUBIDEST,VIRTUAL,OCULTO
CAMPO=CODART,VIRTUAL,NOENTER
CAMPO=DESART1,VIRTUAL,NOENTER
CAMPO=CODLOT,VIRTUAL,NOENTER
CAMPO=UNIEMB,VIRTUAL,NOENTER
CAMPO=NCAJAS,VIRTUAL,NOENTER
CAMPO=SERVCAJA,POSTCHANGE=FEJECUTA("+CCUENTA","",
                                   FIF("CHAYMAS",
                                      FEJECUTA("-CIGUALA","\n LA CANTIDAD DE CAJAS\n SUPERA LO PEDIDO")),"",
                                   "+CHECKVAL",""),NOENTER
CAMPO=UNIDSUELTAS,VIRTUAL,NOENTER
CAMPO=SERVPICO,POSTCHANGE=FEJECUTA("+CCUENTA","",
                                   FIF("CHAYMAS",
                                      FEJECUTA("-CIGUALA","\n LA CANTIDAD DE PICO\n SUPERA LO PEDIDO")),"",
                                   "+CHECKVAL",""),NOENTER
CAMPO=UNIDADESHOST,VIRTUAL,OCULTO
CAMPO=TOTALUNID,VIRTUAL,OCULTO,CONVIERTE=FCONVIERTEARTFROMDB(":CODART");FCONVIERTEART2DB(":CODART")
CAMPO=DEFECTUOSO,OCULTO,"@L@@@",POSTCHANGE=FEJECUTA("CVALDEFEC","\n NO PUEDES VALIDAR \n MAS DE :MAXDEFECTUOSO DEFECTUOSOS")
CAMPO=OPCION
CAMPO=CADUCI,OCULTO,"_8_"
CAMPO=MSGERROR,OCULTO,"_512_"
CAMPO=LONGERROR,OCULTO,"@@@"
CAMPO=BULTO,VIRTUAL,OCULTO
CAMPO=SERVIDAS,OCULTO,"@L@@@@@@@@@"
CAMPO=MAXDEFECTUOSO,OCULTO,"@L@@@@@"
CAMPO=SKORIG,OCULTO,"@L@@@@@"
CAMPO=NEWCODMOV,OCULTO,"@L@@@@@@@"
CAMPO=ORDENSTK, OCULTO, "@L@@@@@@@"
CAMPO=CERO,VIRTUAL,OCULTO
CAMPO=VALIDA,OCULTO,"@L@@@@@"
CAMPO=SERVCAJAVAL,OCULTO,"@L@@@@@@"
CAMPO=SERVPICOVAL,OCULTO,"@L@@@@@@"
CAMPO=DEFEVAL,OCULTO,"@L@@@@@@"
CAMPO=AJUSTEPOS,OCULTO,"_10_"
CAMPO=AJUSTENEG,OCULTO,"_10_"
CAMPO=AJUSTEDEF,OCULTO,"_10_"
CAMPO=RET,OCULTO,"@@"
CAMPO=CODAREA,OCULTO,"_20_"
CAMPO=CODPERFIL,VIRTUAL,OCULTO

# DEFINICION DE CURSORES


CURSOR=CSELLIMPIACAMPOS SELECT ' ' OPCION,0 RET,UBI.CODAREA 
                           FROM VDMOVIM MOV,VDUBICA UBI
                           WHERE MOV.CODMOV=:CODMOV AND MOV.CODUBIDEST=UBI.CODUBI; 

CURSOR=CESCERO SELECT :CERO FROM DUAL WHERE :CERO='S';

CURSOR=CSELDEFECTO SELECT :NCAJAS SERVCAJA,:UNIDSUELTAS SERVPICO,0 DEFECTUOSO,0 VALIDA FROM DUAL;

CURSOR=CSELLONGERROR SELECT VD.GETPROP('LONGITUDERROR') LONGERROR FROM DUAL;

CURSOR=CSELNOTNULL SELECT :CODBARRAS1 FROM DUAL WHERE :CODBARRAS1 IS NULL AND :CODBARRAS2 IS NULL;


CURSOR=CCHECKLOTEYART SELECT :CODARTLEIDO 
                        FROM DUAL 
                       WHERE :CODARTLEIDO = :CODART AND
                             NVL(:CODLOTLEIDO,'0') = DECODE(:CODLOT,NULL,NVL(:CODLOTLEIDO,'0'),:CODLOT) ; 

CURSOR=CDIVIDEERROR BEGIN :MSGERROR:=VD.DIVERRORRADIO(:V10ERROR,:LONGERROR);
                    END;@

CURSOR=CSELCODARTEAN SELECT CODART CODARTLEIDO
                       FROM VDARTIC
                      WHERE CODEAN=:CODEANLEIDO;

CURSOR=CCUENTA SELECT (:SERVCAJA*:UNIEMB)+:SERVPICO SERVIDAS FROM DUAL;

CURSOR=CHAYMAS SELECT :SERVCAJA FROM DUAL WHERE :SERVIDAS>:TOTALUNID;

CURSOR=CIGUALA SELECT :NCAJAS SERVCAJA,:UNIDSUELTAS SERVPICO FROM DUAL;

CURSOR=CSELOPCION SELECT :OPCION OPCION
                    FROM DUAL
                   WHERE :OPCION IN (' ','S','N','R');

CURSOR=CSELOPRECHAZO SELECT :OPCION FROM DUAL WHERE :OPCION='R';

CURSOR=CPATRAS UPDATE VDMOVIM SET STATUS=VDST.FMOVASIGNADO,CODOPEMODIF=:CODOPE,FECMODIF=VD.FECHASYS,HORAMODIF=VD.HORASYS 
                           WHERE CODMOV=:CODMOV AND STATUS=VDST.FMOVPRESENTADO AND CODRECURSO=:CODRECURSO;

CURSOR=CUPDANO SELECT 'N' OPCION FROM DUAL;

CURSOR=CVERIFACERO1 SELECT :SERVCAJA FROM DUAL WHERE :CERO='N' AND :SERVIDAS<:TOTALUNID AND :SERVCAJA<:NCAJAS;

CURSOR=CVERIFACERO2 SELECT :SERVCAJA FROM DUAL WHERE :CERO='N' AND :SERVIDAS+:DEFECTUOSO>=:SKORIG;

CURSOR=CSELDEFCONFI SELECT VD.GETPROP('MAXDEFECTUOSO') MAXDEFECTUOSO,
                           VD.GETPROP('AJUSTE+') AJUSTEPOS,
                           VD.GETPROP('AJUSTE-') AJUSTENEG,
                           VD.GETPROP('AJUSTED') AJUSTEDEF
                      FROM DUAL;

CURSOR=CVALDEFEC SELECT :DEFECTUOSO FROM DUAL WHERE :DEFECTUOSO<=:MAXDEFECTUOSO;


CURSOR=CCARGASTOCK SELECT SUM(CANTIDAD) SKORIG,ORDENSTK
                     FROM VDSTOCK 
                    WHERE CODMAT=:CODMATORI AND CODART=:CODART AND CODLOT=:CODLOT
                   GROUP BY ORDENSTK;

CURSOR=CREGMAS BEGIN
                 IF (:DEFECTUOSO+:SERVIDAS>:SKORIG) THEN
                   :RET:=0;
                   :NEWCODMOV:=0;
                   VDSTK.REGULARIZASTK(:CODMATORI,:ORDENSTK,:AJUSTEPOS,'REGULARIZA',(:DEFECTUOSO+:SERVIDAS)-:SKORIG,NULL,:MSGERROR,:NEWCODMOV,:RET);
				   UPDATE VDMOVIM SET CODRECURSO=:CODRECURSO WHERE CODMOV=:NEWCODMOV;
                   :SKORIG:=:DEFECTUOSO+:SERVIDAS;
                    UPDATE VDUBICA SET SWTUBIMARCADA='S' 
                     WHERE (CODUBI=:CODUBIORI OR CODUBI IN (SELECT DISTINCT CNT.CODUBI FROM VDCONTE CNT,VDSTOCK STK 
                                                            WHERE CNT.CODMAT=STK.CODMAT AND STK.CODART=:CODART)) AND
                          CODUBI NOT IN (SELECT UB1.CODUBI FROM VDUBICA UB1 WHERE CODAREA IN ('DEFECTUOSO','DEVOLUCION'));
                 END IF;
               END;@
#                   SGLINVEN.MARCAINVENART(:CODARTT,'REGULARIZACION REPOSICION UNIDADES',0,:NEWCODMOV,:CODUBIORIGT);

CURSOR=CREGDEFECTUOSO DECLARE
                          MICODMATDEST VDCONTE.CODMAT%TYPE;
                      BEGIN
                        IF :DEFECTUOSO=0 THEN RETURN;
                        END IF;
                        :RET:=0;
                        :NEWCODMOV:=0;
                        :SKORIG:=:SKORIG-:DEFECTUOSO;
                        SELECT CODMAT INTO MICODMATDEST FROM VDCONTE WHERE CODUBI='DEFECTUOSO' AND TIPOCONTE='VIRTUAL' AND ROWNUM<2;
                        VDMOV.CREAMOV(:NEWCODMOV,'CU',:AJUSTEDEF,VDST.FMOVRECODEPO,:CODMATORI,'DEFECTUOSO',MICODMATDEST,
                                       MICODART=>:CODART,MICANTIDAD=>:DEFECTUOSO,MIUNIEMB=>:UNIEMB,MIBLOQUEOSDEST=>'0000020000',MICODRECURSO=>:CODRECURSO);
                        IF :NEWCODMOV=0 THEN 
                          :RET:=1;
                          :MSGERROR:='ERROR CREANDO MOVIMIENTO';
                        ELSE
                          :RET:=VDACTSTOCK.EJECUTAMOV(:NEWCODMOV,:MSGERROR);
                        END IF;
                      END;@

CURSOR=CERROR SELECT :RET FROM DUAL WHERE :RET=0;

CURSOR=CDEMENOS SELECT :SERVIDAS FROM DUAL WHERE :SERVIDAS<:TOTALUNID-:DEFECTUOSO AND :SERVCAJA<:NCAJAS;

CURSOR=CDEMENOS2 SELECT :SERVIDAS FROM DUAL WHERE :SERVIDAS<:TOTALUNID-:DEFECTUOSO AND :SERVCAJA=:NCAJAS;

CURSOR=CREGNEGATIVA BEGIN
                      IF (:SKORIG-:SERVIDAS>0) THEN
                        :RET:=0;
                        :NEWCODMOV:=0;
                        VDSTK.REGULARIZASTK(:CODMATORI,:ORDENSTK,:AJUSTENEG,'REGULARIZA',(-1)*(:SKORIG-:SERVIDAS),NULL,:MSGERROR,:NEWCODMOV,:RET);
						UPDATE VDMOVIM SET CODRECURSO=:CODRECURSO WHERE CODMOV=:NEWCODMOV;
                        :SKORIG:=:SERVIDAS;
                        UPDATE VDUBICA SET SWTUBIMARCADA='S' 
                         WHERE (CODUBI=:CODUBIORI OR CODUBI IN (SELECT DISTINCT CNT.CODUBI FROM VDCONTE CNT,VDSTOCK STK 
                                                                 WHERE CNT.CODMAT=STK.CODMAT AND STK.CODART=:CODART)) AND
                               CODUBI NOT IN (SELECT UB1.CODUBI FROM VDUBICA UB1 WHERE CODAREA IN ('DEFECTUOSO','DEVOLUCION'));
                      END IF;
                    END;@

CURSOR=CREGNEGATIVA2 BEGIN
                       :RET:=0;
                       :NEWCODMOV:=0;
                       VDSTK.REGULARIZASTK(:CODMATORI,:ORDENSTK,:AJUSTENEG,'REGULARIZA',(-1)*(:TOTALUNID-:SERVIDAS),NULL,:MSGERROR,:NEWCODMOV,:RET);
						UPDATE VDMOVIM SET CODRECURSO=:CODRECURSO WHERE CODMOV=:NEWCODMOV;
                       :SKORIG:=:SKORIG-(:TOTALUNID-:SERVIDAS);
                        UPDATE VDUBICA SET SWTUBIMARCADA='S' 
                        WHERE (CODUBI=:CODUBIORI OR CODUBI IN (SELECT DISTINCT CNT.CODUBI FROM VDCONTE CNT,VDSTOCK STK 
                                                                WHERE CNT.CODMAT=STK.CODMAT AND STK.CODART=:CODART)) AND
                              CODUBI NOT IN (SELECT UB1.CODUBI FROM VDUBICA UB1 WHERE CODAREA IN ('DEFECTUOSO','DEVOLUCION'));
                     END;@

CURSOR=CHECKVAL SELECT 'N' CERO FROM DUAL WHERE :CERO='S' AND (:SERVCAJA<>:SERVCAJAVAL OR :SERVPICO<>:SERVPICOVAL OR :DEFECTUOSO<>:DEFEVAL);

CURSOR=CCARGAVAL SELECT :SERVCAJA SERVCAJAVAL,:SERVPICO SERVPICOVAL,:DEFECTUOSO DEFEVAL FROM DUAL WHERE 1=1;

CURSOR=CDUMMY SELECT :SKORIG SKORIG FROM DUAL;

CURSOR=CREGMAS1 BEGIN
                  IF (:VALIDA>0 AND :CERO='S') THEN
                    :RET:=0;
                    :NEWCODMOV:=0;
                    VDSTK.REGULARIZASTK(:CODMATORI,:ORDENSTK,:AJUSTEPOS,'REGULARIZA',:VALIDA,NULL,:MSGERROR,:NEWCODMOV,:RET);
			        UPDATE VDMOVIM SET CODRECURSO=:CODRECURSO WHERE CODMOV=:NEWCODMOV;
                    UPDATE VDUBICA SET SWTUBIMARCADA='S' 
                     WHERE (CODUBI=:CODUBIORI OR CODUBI IN (SELECT DISTINCT CNT.CODUBI FROM VDCONTE CNT,VDSTOCK STK 
                                                             WHERE CNT.CODMAT=STK.CODMAT AND STK.CODART=:CODART)) AND
                           CODUBI NOT IN (SELECT UB1.CODUBI FROM VDUBICA UB1 WHERE CODAREA IN ('DEFECTUOSO','DEVOLUCION'));
                  END IF;
                END;@

CURSOR=CSELOPNO SELECT :OPCION OPCION
                  FROM DUAL
                 WHERE :OPCION='N';

CURSOR=CDESASIGNAMOV DECLARE RET NUMBER; BEGIN RET:=VDPLANMOV.DESASIGNAMOV(:CODRECURSO,1); END;@

CURSOR=CDAMEOTROMOV DECLARE RET NUMBER;
                        BEGIN RET:=VDPLANMOV.ASIGNAMOVPERFIL(:CODRECURSO,:CODPERFIL);
                        IF RET=-1 THEN RAISE NO_DATA_FOUND;
                        END IF;
                    END;@

CURSOR=CSELMOVASIG SELECT CODMOV FROM VDMOVIM MOV,VDRECURSO REC
                          WHERE MOV.STATUS=VDST.FMOVASIGNADO
                            AND MOV.CODRECURSO=REC.CODRECURSO
                            AND REC.CODRECURSO=:CODRECURSO
                            AND REC.CODPERFIL=:CODPERFIL; 



CURSOR=CCOPIAMOV DECLARE
                   V_MOVIM VDMOVIM%ROWTYPE;
                 BEGIN
                   :RET:=0;
                   SELECT * INTO V_MOVIM FROM VDMOVIM WHERE CODMOV=:NEWCODMOV;
                   SELECT VDSECMOVIM.NEXTVAL INTO V_MOVIM.CODMOV FROM DUAL;
                   V_MOVIM.CODMATORI:=:CODMAT;
                   V_MOVIM.CODUBIORI:='INTER';
                   V_MOVIM.CODMATTEMP:=NULL;
                   V_MOVIM.CODUBITEMP:=NULL;
                   V_MOVIM.CODMOVESP:=:NEWCODMOV;
                   V_MOVIM.STATUS:=VDST.FMOVPDTEMOVIM;
                   INSERT INTO VDMOVIM VALUES V_MOVIM;
                   UPDATE VDMOVIM SET CODUBIDEST='INTER',CODMATDEST=:CODMAT
                    WHERE CODMOV=:NEWCODMOV;
                   EXCEPTION WHEN NO_DATA_FOUND THEN :RET:=1;
                             WHEN OTHERS THEN :RET:=1;
                 END;@

CURSOR=CSEL2ETAPAS SELECT :CODAREA FROM DUAL WHERE :CODAREA IN ('INTERRP');
                          
CURSOR=CUPDMOVSERV UPDATE VDMOVIM SET CANTIDAD=:SERVIDAS WHERE CODMOV=:CODMOV AND :SERVIDAS!=CANTIDAD;

CURSOR=CUPDMOVPDTE UPDATE VDMOVIM SET CANTIDAD=:SERVIDAS WHERE CODMOVESP=:CODMOV AND :SERVIDAS!=CANTIDAD;

CURSOR=CHAYCANTIDAD SELECT :RET FROM DUAL WHERE :SERVIDAS>0;

CURSOR=CANULAMOV UPDATE VDMOVIM SET STATUS=VDST.FMOVANULADO WHERE CODMOV=:CODMOV;

CURSOR=CANULAMOVPDTE UPDATE VDMOVIM SET STATUS=VDST.FMOVANULADO WHERE CODMOVESP=:CODMOV;

