# Módulo   : VDRECORDEN.PAN
# Función  : RECEPCIÓN DE MERCANCÍA: Selección del Protocolo de Recepción
#            
# Creación : 30-01-2008
# Autor    : ICC
###########################################
# Histórico de cambios:
#   
SELECCION DE ORDEN
 _10_______ _10_______

 PULMON  _12___________
 
 /* LEER DATOS DE COMPRA */
 PROTOCOLO : _20____________
 ORD. REC  : _20____________
 TIPO ORDEN: _10_______
 DIVISION  : _20__ _40_________
 ALB. PROV : _20_______________

|

PREQUERY=FEJECUTA("CLIMPIAR","\nERROR,\nAL LIMPIAR LOS CAMPOS",
                  FIF("CTIENEPROTO",FEJECUTA(FPOSICIONACAMPO(FSUCCESS,"CODPROTO"),"\nERROR,\nAL POSICIONARSE EN EL CAMPO CODPROTO"),
				                    FEJECUTA("COCULTACAMPOS","ERROR AL OCULTAR CAMPOS",
									         FPOSICIONACAMPO(FSUCCESS,"CODORDREC"),"\nERROR,\nAL POSICIONARSE EN EL CAMPO CODORDREC")
				     ),"")
                  
POSTQUERY=FEJECUTA(FIF("CSELNOTNULL",FPOSICIONABLOQUE("0"),
					   FEJECUTA("CVALDATOS","\nOBLIGATORIO LEER\nPROTOCOLO DE ENTRADA U ORD.RECEPCION",
							   "CORDEN","\nERROR EN PL \nVDRECEP.VALRECEP",
							   "CVERERROR","\nERROR,\n:MSGERROR",	                 
							   FIF("CNOTNULLTIPO",FEJECUTA("CVALTIPORDEN","\nERROR,\nNO EXISTE EL TIPO \nDE RECEPCIÓN :TIPORDREC",
														   "CVERERROR",":MSGERROR"),
												  FEJECUTA("CTIPOREC","\nERROR,\nDEBE INTRODUCIR ORDEN\n O TIPO DE RECEPCION"),""),"",
							   FPOSICIONABLOQUE("VDRECMATRICULA.PAN"),"\nNO SE PUEDE POSICIONAR\nEN EL SIG. BLOQUE")),"")
                   

CAMPO=CODRECURSO,NOENTER,VIRTUAL
CAMPO=CODOPE,NOENTER,VIRTUAL
CAMPO=PULMON,VIRTUAL,NOENTER
CAMPO=CODPROTO,SCAN,AUTOENTER,POSTCHANGE=FIF("CSELPROTONOTNULL", FEJECUTA("CSELDATOS","ERROR AL OBTENER DATOS\nDEL PROTOCOLO :CODPROTO",
                                                                          "CPROTODIVIS","\nPROTOCOLO :CODPROTO\nNO ES DE DIVISION :CODDIV",
                                                                          "CVERAREARECEP","SEGUN EL PROTOCOLO :CODPROTO \nNO CORRESPODE A ESTE ALMACEN\nPERTENECE AL ALMACEN :CODAREARECEP"))
CAMPO=CODORDREC,UPPER,SCAN,AUTOENTER,POSTCHANGE=FEJECUTA("@-CSELNOTNULL","",FDESIGNACION("CSELTIPOORDEN","ORDEN DE RECEPCION NO EXISTE"))
CAMPO=TIPORDREC
CAMPO=CODDIV,POSTCHANGE=FDESIGNACION("CSELDIVIS", "\nERROR,\nNO EXISTE\nLA DIVISION :CODDIV")
CAMPO=DESDIV,NOENTER
CAMPO=CODALBPROVE,SCAN
CAMPO=BLOQUEOSORIG,OCULTO,VIRTUAL	
CAMPO=BLOQUEOS,OCULTO,VIRTUAL
CAMPO=DUMMY,OCULTO,"#"
CAMPO=MSGERROR,OCULTO,"_100____________"
CAMPO=ERROR,OCULTO, "_"
CAMPO=CODALBTRAN,OCULTO,"_20_"
CAMPO=CODAGE,OCULTO,"_100_"
CAMPO=CODAREARECEP,OCULTO,"_20_"

CURSOR=CLIMPIAR SELECT '' CODORDREC, '' TIPORDREC, '' CODDIV, '' DESDIV , '' CODPROTO, 0 DUMMY ,'' MSGERROR, '' CODALBPROVE FROM DUAL;

CURSOR=CSELTIPOORDEN SELECT TIPORDREC, CODDIV FROM VDORDRECCAB WHERE CODORDREC=:CODORDREC;

CURSOR=CSELNOTNULL SELECT :CODPROTO FROM DUAL WHERE :CODPROTO IS NULL AND :CODORDREC IS NULL;
CURSOR=CSELPROTONOTNULL SELECT :CODPROTO FROM DUAL WHERE :CODPROTO IS NOT NULL;

CURSOR=CSELDIVIS SELECT DECODE(:CODDIV, NULL, NULL, DESDIV) DESDIV
                   FROM VDDIVIS 
                  WHERE CODDIV = :CODDIV
                    OR :CODDIV IS NULL;
                   
#Función que valida:
#  - Con Orden de recepción:
#    - Orden activa
#    - Si no se indica división, que no exista más de una
#  - Sin orden de recepción:
#    - Tipo de orden de recepción obligatoria
#    - En caso de existir más de una división, debe informarse.
#Devuelve el error o la división, si no se ha informado y ha pasado todas las validaciones
CURSOR=CORDEN BEGIN
                  VDRECEP.VALRECEP (:CODORDREC, :TIPORDREC, :CODDIV, :MSGERROR);
              END;@

CURSOR=CNOTNULLTIPO SELECT 1 DUMMY
                      FROM DUAL
                     WHERE :TIPORDREC IS NOT NULL;

CURSOR=CVALTIPORDEN SELECT CASE WHEN REQUIERE_ORDEN = 'S' AND :CODORDREC IS NULL THEN
                                     '\nORDEN RECEP. OBLIGATORIA,\nDEBE LEER\n LA ORDEN DE RECEPCION'
                           END MSGERROR
                      FROM VDTIPORDRECLIN
                     WHERE TIPORDREC = :TIPORDREC;

CURSOR=CTIPOREC SELECT TIPORDREC
                  FROM VDORDRECCAB
                 WHERE CODORDREC = :CODORDREC
                   AND CODDIV    = :CODDIV;

CURSOR=CVERERROR SELECT 1 DUMMY
                   FROM DUAL
                  WHERE :MSGERROR IS NULL;

CURSOR=CVALDATOS SELECT :CODPROTO FROM DUAL WHERE :CODPROTO IS NOT NULL OR :CODORDREC IS NOT NULL;				  

CURSOR=CPROTODIVIS SELECT :CODPROTO FROM VDPROTOCOLO WHERE CODPROTO=:CODPROTO AND CODDIV=:CODDIV;


CURSOR=CVERAREARECEP SELECT :CODPROTO FROM VDUBICA WHERE CODUBI = :PULMON AND CODAREA = :CODAREARECEP;

CURSOR=CSELDATOS SELECT PTR.CODDIV CODDIV, PTR.CODORDREC CODORDREC, ORC.TIPORDREC TIPORDREC, PTR.CODALBTRAN, PTR.CODALBPROVE, PTR.CODAGE, PTR.CODAREARECEP 
                   FROM VDPROTOCOLO PTR, VDORDRECCAB ORC 
				   WHERE PTR.CODORDREC=ORC.CODORDREC AND PTR.CODPROTO = :CODPROTO AND :CODPROTO IS NOT NULL;

CURSOR=CTIENEPROTO SELECT :CODPROTO FROM DUAL WHERE 1=2;
CURSOR=COCULTACAMPOS SELECT  1 CODPROTO__INVISIBLE FROM DUAL;
