# Módulo   : VDMOVSTKPARCIALART.PAN
# Función  : Formulario de movimiento de stock parcial asignado a recurso
#            Pantalla de lectura articulo y lote.
#
# Creación : 20-05-2008
# Autor    : JMM
###########################################
# Histórico de cambios:
#
MOVIMIENTO DE STOCK PARCIAL
_10_______ _10_______ 
MOVIMIENTO PARCIAL 
LECTURA ARTICULO Y LOTE
ARTICULO  _40_________________
   _20_________________
   _20_________________
LOTE _40_________________
CAJAS   U/E      + PICO 
##### * #L#######  #L#######
TOTAL UNIDADES A COGER
#L############# _10__ 
LEER ARTICULO Y LOTE
_250____________________________________________________________________________________________________________________
_250____________________________________________________________________________________________________________________
|

PREQUERY=FEJECUTA("CSELLIMPIACAMPOS","ERROR\n LIMPIANDO CAMPOS",                  
                  "CSELLONGERROR","ERROR\n OBTENIENDO PROPIEDAD\n LONGERROR")


POSTQUERY=FEJECUTA(FIF("CSELNOTNULL",FPOSICIONABLOQUE("VDMOVSTKPARCIALORI.PAN"),FSUCCESS),"ERROR\n AL CARGAR VDMOVSTKPARCIALORI.PAN",
                   "CCHECKLOTEYART","\nERROR,\nEL ARTICULO Y LOTE\nNO COINCIDE.",                   
                   "CSELMOVSAJECUTAR","ERROR,\n AL RECUPERAR LOS\n MOVIMIENTOS A EJECUTAR.",
                   FWHILE(FERRORCURSOR("CSELMOVSAJECUTAR"),
                     FEJECUTA(FIF(FRECOGESTKSYNC("ACTSTKORIGEN",":CODMOV",":CODRECURSO"),
                              FSUCCESS,
                              FEJECUTA("CDIVIDEERROR","ERROR\nDIVIDIENDO ERROR MOV",FFAILURE,":MSGERROR")),"",
                      +FFETCHCURSOR("CSELMOVSAJECUTAR"),"")),"",
                   FCOMMIT,"ERROR,\n HACIENDO COMMIT.",
                   FPOSICIONABLOQUE("VDMOVSTKPARCIALDEST.PAN"),"\nERROR\n CARGANDO BLOQUE\n VDMOVSTKPARCIALDEST.PAN")

# DEFINICION DE CAMPOS
CAMPO=CODRECURSO,VIRTUAL,NOENTER
CAMPO=CODOPE,VIRTUAL,NOENTER
CAMPO=CODMOV,OCULTO,"@L@@@@@@@@@@@"
CAMPO=CODMATORI,VIRTUAL,OCULTO
CAMPO=CODUBIORI,VIRTUAL,OCULTO
CAMPO=CODUBIDEST,VIRTUAL,OCULTO
CAMPO=CODART,VIRTUAL,NOENTER
CAMPO=DESART1,VIRTUAL,NOENTER
CAMPO=DESART2,VIRTUAL,NOENTER
CAMPO=CODLOT,VIRTUAL,NOENTER
CAMPO=NCAJAS,VIRTUAL,NOENTER
CAMPO=UNIEMB,VIRTUAL,NOENTER
CAMPO=UNIDSUELTAS,VIRTUAL,NOENTER
CAMPO=TOTALUNID,VIRTUAL,NOENTER
CAMPO=UNIDADESHOST,VIRTUAL,NOENTER
CAMPO=CADUCI,OCULTO,"_8_"
CAMPO=CODARTLEIDO,SCAN,OCULTO,"_40_"
#,POSTCHANGE=FEJECUTA(FFUERZASCAN("ART"),"\nERROR\n DEBE SCANNEAR\n EL ARTICULO")
CAMPO=CODLOTLEIDO,OCULTO,"_40_"
CAMPO=CODBARRAS1,SCAN,POSTCHANGE=FDESIGNACION(FIF("CSELNOTNULL",FPOSICIONABLOQUE("2"),FSUCCESS),"",
                                              +FLEEARTICULO("CODBARRAS1", "CODARTLEIDO",""),"ERROR :V10ERROR",
                                              +FANALIZAEANRAD("CODBARRAS1", "37","UNIEMB","17", "CADUCI","10","CODLOTLEIDO"),"\nERROR,\nEN LECTURA DEL\nCódigo DE BARRAS")
                                               
CAMPO=CODBARRAS2,SCAN,POSTCHANGE=FDESIGNACION(FIF("CSELARTNOTNULL",FSUCCESS,+FLEEARTICULO("CODBARRAS2", "CODARTLEIDO","")),"ERROR :V10ERROR",
                                                   +FANALIZAEANRAD("CODBARRAS2", "37","UNIEMB","17", "CADUCI","10","CODLOTLEIDO"),"\nERROR,\nEN LECTURA DEL\nCódigo DE BARRAS") 

CAMPO=MSGERROR,OCULTO,"_512_"
CAMPO=LONGERROR,OCULTO,"@@@"
CAMPO=BULTO,VIRTUAL,OCULTO




# DEFINICION DE CURSORES


CURSOR=CSELARTNOTNULL SELECT :CODART FROM DUAL WHERE :CODART IS NOT NULL;

CURSOR=CSELLIMPIACAMPOS SELECT NULL CODBARRAS1, NULL CODBARRAS2,NULL CODARTLEIDO,NULL CODLOTLEIDO FROM DUAL ; 

CURSOR=CSELMOVSAJECUTAR SELECT CODMOV 
                            FROM VDMOVIM MOV 
                            WHERE MOV.STATUS = VDST.FMOVPRESENTADO AND
                                  MOV.CODRECURSO = :CODRECURSO AND
                                  MOV.CODMATORI = :CODMATORI AND
                                  MOV.CODUBIORI = :CODUBIORI AND
                                  MOV.CODUBIDEST = :CODUBIDEST AND
                                  MOV.UNIEMB  = :UNIEMB AND
                                  MOV.CODART  = :CODART AND
                                  MOV.CODLOT  = :CODLOT;

    
CURSOR=CSELLONGERROR SELECT VD.GETPROP('LONGITUDERROR') LONGERROR FROM DUAL;

CURSOR=CSELNOTNULL SELECT :CODBARRAS1 FROM DUAL WHERE :CODBARRAS1 IS NULL AND :CODBARRAS2 IS NULL;


CURSOR=CCHECKLOTEYART SELECT :CODARTLEIDO 
                        FROM DUAL 
                       WHERE :CODARTLEIDO = :CODART AND
                             NVL(:CODLOTLEIDO,'0') = DECODE(:CODLOT,NULL,NVL(:CODLOTLEIDO,'0'),:CODLOT); 

CURSOR=CDIVIDEERROR BEGIN :MSGERROR:=VD.DIVERRORRADIO(:V10ERROR,:LONGERROR);
                    END;@

