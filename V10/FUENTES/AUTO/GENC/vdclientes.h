// Modulo generado automaticamente a partir de VDCLIENTES.DEF

VDEXPORT diccionario dcli;
#define CLINUMCOL	75
typedef struct {
        char    rowid[ROWIDLON];
        char    codcliente[LCODCLIENTE];
        long    seqcodcli;
        char    descliente[LDESCLIENTE];
        char    tipocli[LTIPOCLI];
        char    nif[LNIF];
        char    contacto[LCONTACTO];
        char    telefono[LTELEFONO];
        char    fax[LFAX];
        char    email[LEMAIL];
        char    direccion[LDIRECCION];
        char    direccion1[LDIRECCION1];
        char    direccion2[LDIRECCION2];
        char    direccion3[LDIRECCION3];
        char    poblacion[LPOBLACION];
        char    dp[LDP];
        char    codprov[LCODPROV];
        char    codpais[LCODPAIS];
        char    idiomaetiq[LIDIOMAETIQ];
        char    idiomadoc[LIDIOMADOC];
        char    tipopedido[LTIPOPEDIDO];
        long    numalba;
        char    backorder[LBACKORDER];
        char    swtanular[LSWTANULAR];
        char    swtvalorado[LSWTVALORADO];
        char    swttotales[LSWTTOTALES];
        char    swtproforma[LSWTPROFORMA];
        char    swtagrupar[LSWTAGRUPAR];
        char    swtpaletizar[LSWTPALETIZAR];
        char    swtmodelo[LSWTMODELO];
        char    swtfactu[LSWTFACTU];
        char    refmodelo[LREFMODELO];
        char    portes[LPORTES];
        char    swtseguro[LSWTSEGURO];
        char    swtedi[LSWTEDI];
        char    swtreembolso[LSWTREEMBOLSO];
        char    swtaduana[LSWTADUANA];
        long    prioridad;
        long    urgencia;
        char    codage[LCODAGE];
        double  recargoage;
        double  descuentocab;
        double  descuentolin;
        double  recargocab;
        double  recargolin;
        double  iva;
        char    codclifactu[LCODCLIFACTU];
        char    desclifactu[LDESCLIFACTU];
        char    niffactu[LNIFFACTU];
        char    dirfactu[LDIRFACTU];
        char    dirfactu1[LDIRFACTU1];
        char    dirfactu2[LDIRFACTU2];
        char    dirfactu3[LDIRFACTU3];
        char    pobfactu[LPOBFACTU];
        char    dpfactu[LDPFACTU];
        char    codprovfactu[LCODPROVFACTU];
        char    codpaisfactu[LCODPAISFACTU];
        char    contafactu[LCONTAFACTU];
        char    telfactu[LTELFACTU];
        char    faxfactu[LFAXFACTU];
        char    emailfactu[LEMAILFACTU];
        char    seriefactura[LSERIEFACTURA];
        char    tipoformapago[LTIPOFORMAPAGO];
        char    observaciones[LOBSERVACIONES];
        long    tpcverif;
        char    codopemodif[LCODOPEMODIF];
        long    fecmodif;
        char    horamodif[LHORAMODIF];
        char    tipobaseseguro[LTIPOBASESEGURO];
        double  baseseguro;
        char    swtbloqdev[LSWTBLOQDEV];
        char    activo[LACTIVO];
        char    swtbloqscan[LSWTBLOQSCAN];
        char    admitedef[LADMITEDEF];
        long    codcomen;
    } vdclientess;

// Prototipos de funciones definidas en VDCLIENTES.C
VDEXPORT diccionario *CLIdamediccionario(void);
VDEXPORT int CLIselcodcliente(char *codcliente,long seqcodcli,vdclientess *cli);
VDEXPORT int CLIselvdclientes(char *codcliente,long seqcodcli,vdclientess *cli);
VDEXPORT int CLIactualizavdclientes(vdclientess *cli,int error);
VDEXPORT int CLIinsert(vdclientess *cli,int error);
VDEXPORT int CLIdel(vdclientess *cli,int error);
VDEXPORT int CLIinter(vdclientess *cli);
VDEXPORT char *CLIlog(vdclientess *cli);
char * CLIdebug(vdclientess *cli);
