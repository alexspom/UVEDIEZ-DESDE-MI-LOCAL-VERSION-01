# Módulo   : VDGESMUELLE.PAN
# Creación : 05-07-2019
# Autor    : DFL
###########################################
# Histórico de cambios:
#   
SELECCION DE ORDEN
 _10_______ _10_______

 PROTOCOLO _20___________
 
   /* GESTION MUELLE */
 _______________________________

 1.- INICIAR DESCARGA
 2.- FINALIZAR DESCARGA
 3.- SALIR
 OPCION @L
 
|

PREQUERY=FEJECUTA("CVERSTATUSMUE","\nERROR,\nAL VER ESTADO",
                  "CINITEXTO","")

POSTQUERY=FEJECUTA(FIF("CSELNOTNULL",FPOSICIONABLOQUE("0"),FSUCCESS),"",                   	              
                   FPOSICIONABLOQUE("0"),"\nNO SE PUEDE POSICIONAR\nEN EL SIG. BLOQUE")
                   

CAMPO=CODRECURSO,NOENTER,VIRTUAL
CAMPO=CODOPE,NOENTER,VIRTUAL
CAMPO=MSGERROR,OCULTO,"_100____________"
CAMPO=ERROR,OCULTO, "_"
CAMPO=STMUELLE,OCULTO,"@@@@@@"
CAMPO=CODMUELLE,OCULTO,"_20_"
CAMPO=DUMMY,OCULTO,"@"
CAMPO=CODAREARECEP,OCULTO,"_20_"

CAMPO=CODPROTO,VIRTUAL,NOENTER
CAMPO=TEXTOCAB,NOENTER
CAMPO=OPCION,POSTCHANGE=FEJECUTA(FENRANGO("1-3"),"DEBE INTRODUCIR\n OPCION ENTRE\n 0 Y 3",
                                 FSWITCHCADENA(":OPCION",
                                               "1", FEJECUTA("CVALSTATUS","NO SE PUEDE BLOQUEAR",
											                 "CINIDESCARGA","ERROR AL INICIAR\nLA DESCARGA",
											                 "CACTSTMUELLE","ERROR AL OCUPAR EL MUELLE"),
                                               "2", FEJECUTA("CVALSTATUS1","NO SE PUEDE LIBERAR",
											                 "CFINDESCARGA","ERROR AL FINALIZAR\nLA DESCARGA",
											                 "CACTSTMUELLE","ERROR AL LIBERAR EL MUELLE"),
                                               "3", FPOSICIONABLOQUE("-1"),
                                               "", FPOSICIONABLOQUE("-1")),"IMPOSIBLE EJECUTAR")

CURSOR=CVERERROR SELECT 1 DUMMY
                   FROM DUAL
                  WHERE :MSGERROR IS NULL;

CURSOR=CSELNOTNULL SELECT 1 DUMMY FROM DUAL WHERE :TEXTOCAB IS NULL;
CURSOR=CVERSTATUSMUE SELECT PRT.CODMUELLE CODMUELLE,MUE.STATUS STMUELLE, PRT.CODAREARECEP CODAREARECEP FROM VDPROTOCOLO PRT, VDMUELLES MUE WHERE PRT.CODAREARECEP = MUE.CODAREA AND PRT.CODMUELLE = MUE.CODMUELLE AND PRT.CODPROTO=:CODPROTO;
CURSOR=CINITEXTO SELECT CASE :STMUELLE WHEN 100 THEN 'EL MUELLE '||:CODMUELLE||' ESTA LIBRE'
                                       WHEN 200 THEN 'EL MUELLE '||:CODMUELLE||' ESTA OCUPADO'
                                       WHEN 300 THEN 'EL MUELLE '||:CODMUELLE||' ESTA BLOQUEADO'
                                       ELSE 'NO SE COMO ESTA EL MUELLE'
                              END TEXTOCAB
				    FROM DUAL;
					
CURSOR=CVALSTATUS  SELECT :STMUELLE FROM DUAL WHERE :STMUELLE = VDST.FMUELIBRE ;
CURSOR=CVALSTATUS1 SELECT :STMUELLE FROM DUAL WHERE :STMUELLE = VDST.FMUEOCUPADO;

CURSOR=CINIDESCARGA UPDATE VDPROTOCOLO
						  SET CODOPEDESCARGA = VDUSER.GETUSER, FECDESCARGA=VD.FECHASYS, HORADESCARGA=VD.HORASYS
						  WHERE CODPROTO = :CODPROTO;
CURSOR=CFINDESCARGA UPDATE VDPROTOCOLO
						  SET CODOPEFINDESCARGA = VDUSER.GETUSER, FECFINDESCARGA=VD.FECHASYS, HORAFINDESCARGA=VD.HORASYS
						  WHERE CODPROTO = :CODPROTO;
CURSOR=CACTSTMUELLE BEGIN
                         CASE :OPCION
						     WHEN 1 THEN 
						       UPDATE VDMUELLES SET STATUS = VDST.FMUEOCUPADO, CODOPEMODIF=VDUSER.GETUSER, FECMODIF=VD.FECHASYS, HORAMODIF=VD.HORASYS WHERE CODMUELLE = :CODMUELLE AND CODAREA = :CODAREARECEP;
							 WHEN 2 THEN
							   UPDATE VDMUELLES SET STATUS = VDST.FMUELIBRE, CODOPEMODIF=VDUSER.GETUSER, FECMODIF=VD.FECHASYS, HORAMODIF=VD.HORASYS WHERE CODMUELLE = :CODMUELLE AND CODAREA = :CODAREARECEP;
							 ELSE NULL;
							END CASE;
                         COMMIT;							
                      END;@						  
						  
                            