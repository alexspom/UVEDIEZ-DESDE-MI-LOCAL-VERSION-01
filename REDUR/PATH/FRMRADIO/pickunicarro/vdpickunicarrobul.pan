# Módulo   : VDPICKUNICARROBUL.PAN
# Función  : Formulario de recogida de bultos de unidades con carro.
#            Pantalla de confirmacion de cantidad y bulto
#
# Creación : 12-05-2008
# Autor    : JMM
###########################################
# Histórico de cambios:
#
PICKING DE CARRO POR TERMINAL
_10_______ _10_______  

UBI: _20_________________
      
ARTICULO: _40_____________
  _20_________________
  _20_________________ 
CANTIDAD : #L#############
CAJAS  ENVASES UNIDADES
@@@@@   @@@@@   @@@@@

EN BULTO     
_18_______________
_255________________

|

PREQUERY=FEJECUTA("+CLIMPIACAMPOS","",
                  "CSELLONGERROR","ERROR\n OBTENIENDO VARIABLE\n LONGITUDERROR",
                  "CSELBULTO","ERROR\n OBTENIENDO DATOS\n DEL BULTO",
                  "+CSELDECIMALES","",
				  "+CCARGASTOCK","",
				  FPOSICIONACAMPO(FSUCCESS,"CODBULTOSCAN"),"\n\n ERROR AL POSICIONAR")
                  

POSTQUERY=FEJECUTA(FIF("CSELNOTNULL",FPOSICIONABLOQUE("VDPICKUNICARROART.PAN"),FSUCCESS),"\n\n ERROR\n CARGANDO BLOQUE\n VDPICKUNICARROART.PAN",
                   "CVERIFLECTURA","\n\n ERROR\n BULTO INCORRECTO\n LEIDO\n :CODBULTOSCAN\n ESPERADO\n :MATCAJA",
				   "+CCALCSERV","",
				   "CMENORIGUAL","\n\n LA CANTIDAD\n SUPERA\n LA PEDIDA",
				   "CVALIDAMOV","\n\n ERROR\n :MSJERROR",
                   "CERROR","\n\n ERROR\n :MSJERROR",
                   FCOMMIT,"\n\n ERROR\n HACIENDO COMMIT",
				   FIF("CSIGNOTNULL",FPOSICIONABLOQUE(":SIGBLOQUE"),FSUCCESS),"\n\n ERROR\n CARGANDO SIGUIENTE\n BLOQUE",
				   FIF("CSELLINEASPEND",FEJECUTA(FIF("-CDAMEDATOSBUL",FPOSICIONABLOQUE("VDPICKUNICARROART.PAN"),FSUCCESS),"\n\nNO HAY \nMOVIMIENTOS\nPENDIENTES",
                                                 FIF(FCONGELAMOV(":CODMOV"),FSUCCESS,FEJECUTA("CMOVPDTESTOCKBUL","ERROR ACTUALIZANDO MOVTO A PDTESTOCK",
                                                                                               FCOMMIT,"",
                                                                                               FPOSICIONABLOQUE("VDPICKUNICARRERRCONGELA.PAN"))),"ERROR\n CONGELANDO MOVIMIENTO\n :CODMOV",
                                                 "CSELLOTEYCANTIDADBUL","ERROR\n OBTENIENDO LOTE Y CANTIDAD",
                                                 FCOMMIT,"ERROR\n HACIENDO COMMIT",
												 FPOSICIONABLOQUE("VDPICKUNICARROBUL.PAN"),"\n\n ERROR\n CARGANDO BLOQUE\n VDPICKUNICARROBUL.PAN"),
				                        FPOSICIONABLOQUE("VDPICKUNICARROFIN.PAN")),"\n\n ERROR\n CARGANDO BLOQUE\n VDPICKUNICARROFIN.PAN")


# DEFINICION DE CAMPOS
CAMPO=CODRECURSO,VIRTUAL,NOENTER
CAMPO=CODOPE,VIRTUAL,NOENTER
CAMPO=PINTAUBI,VIRTUAL,NOENTER
CAMPO=CODUBIORI,VIRTUAL,OCULTO
CAMPO=CODART,VIRTUAL,NOENTER
CAMPO=DESART1,VIRTUAL,NOENTER
CAMPO=DESART2,VIRTUAL,NOENTER
CAMPO=CANTIDAD,VIRTUAL,NOENTER,CONVIERTE=FCONVIERTEARTFROMDB(":CODART");FCONVIERTEART2DB(":CODART")
CAMPO=CAJAS,VIRTUAL
CAMPO=ENVASES,VIRTUAL
CAMPO=UNIDADES,VIRTUAL
CAMPO=SERVIDA,VIRTUAL,OCULTO
CAMPO=UNIEMB,VIRTUAL,OCULTO
CAMPO=UNIPAQ,VIRTUAL,OCULTO
CAMPO=CODBULTO,OCULTO,"_18_"
CAMPO=MATCAJA,NOENTER
CAMPO=CODBULTOSCAN,SCAN,AUTOENTER,POSTCHANGE=FEJECUTA(FFUERZASCAN("BUL"),"\n DEBE LEER\n MATRICULA DE BULTO")
CAMPO=CODPED,OCULTO,"_20_"
CAMPO=CODMOV,VIRTUAL,OCULTO
CAMPO=MSGERROR,OCULTO,"_512_"
CAMPO=LONGERROR,OCULTO,"@@@"
CAMPO=SEQLINEA,VIRTUAL,OCULTO
CAMPO=RET,OCULTO,"@L@@@@@@@"
CAMPO=SIGBLOQUE,OCULTO,"_40"
CAMPO=MSJERROR,OCULTO,"_1024"
CAMPO=SKORIG,OCULTO,"@L@@@@"
CAMPO=ORDENSTK,OCULTO, "@L@@@@@@@"
CAMPO=CODMATORI,VIRTUAL,OCULTO


# DEFINICION DE CURSORES
CURSOR=CLIMPIACAMPOS SELECT NULL CODBULTOSCAN,NULL SIGBLOQUE FROM DUAL;

CURSOR=CSELLONGERROR SELECT VD.GETPROP('LONGITUDERROR') LONGERROR FROM DUAL;

CURSOR=CSELBULTO SELECT CB.CODBULTO, CB.CODPED, CB.MATCAJA
                   FROM VDBULTOCAB CB, VDBULTOLIN LB
                  WHERE LB.CODMOV = :CODMOV AND
                        CB.CODBULTO = LB.CODBULTO;

CURSOR=CSELDECIMALES SELECT ART.DECIMALES CANTIDAD__DECIMALES FROM VDARTIC ART WHERE CODART = :CODART;

CURSOR=CSELNOTNULL SELECT :CODBULTOSCAN
                     FROM DUAL 
                    WHERE :CODBULTOSCAN IS NULL;  
                    
CURSOR=CVERIFLECTURA SELECT :CODBULTOSCAN
                       FROM DUAL
                      WHERE :CODBULTOSCAN = :MATCAJA;
                      
CURSOR=CCALCSERV SELECT (:CAJAS*:UNIEMB)+(:ENVASES*:UNIPAQ)+:UNIDADES SERVIDA FROM DUAL;
							 
CURSOR=CMENORIGUAL SELECT :SERVIDA FROM DUAL WHERE :SERVIDA<=:CANTIDAD;

CURSOR=CVALIDAMOV BEGIN
                   :RET:=VDCLIPICK.VALIDAMOV(:CODRECURSO,:CODBULTO,:SEQLINEA,:SERVIDA,0,0,0,0,:MSJERROR,:SIGBLOQUE);
                   IF :RET=0 THEN
                      COMMIT;
                    ELSE
                      ROLLBACK;
                   END IF;
                  END;@
				  
CURSOR=CERROR SELECT :RET FROM DUAL WHERE :RET=0;

CURSOR=CSIGNOTNULL SELECT CASE WHEN :SIGBLOQUE='VDPICKUNIVDREG.PAN' THEN 'VDPICKUNICARROREG.PAN' ELSE :SIGBLOQUE END SIGBLOQUE 
                     FROM DUAL WHERE :SIGBLOQUE IS NOT NULL;

CURSOR=CSELLINEASPEND SELECT :CODBULTO
                        FROM VDBULTOCAB CB, VDBULTOLIN LB
                       WHERE CB.CODBULTO = :CODBULTO AND
                             LB.CODBULTO = CB.CODBULTO AND
                             LB.STATUS = VDST.FBULASERVIR;

CURSOR=CDAMEDATOSBUL SELECT MOV.CODMOV,BUL.SEQLINEA
                       FROM VDUBICA UBI, VDBULTOLIN BUL, VDMOVIM MOV, VDBULTOCAB BUC, VDARTIC ART
                      WHERE MOV.CODRECURSO = :CODRECURSO 
                        AND MOV.CODUBIORI  = :CODUBIORI					  
						AND MOV.CODART     = :CODART 
                        AND MOV.STATUS  = VDST.FMOVASIGNADO 
                        AND MOV.TAREA = VD.GETPROP('TAREAPEDUNI')
                        AND BUL.CODMOV   = MOV.CODMOV
                        AND UBI.CODUBI   = MOV.CODUBIORI
                        AND ART.CODART   = MOV.CODART
                        AND BUC.CODBULTO = BUL.CODBULTO
                        AND BUC.STATUS = VDST.FBUCRESERVADO
                      ORDER BY MOV.PRIOMOV,UBI.ORDENMOVIM;

CURSOR=CMOVPDTESTOCKBUL UPDATE VDMOVIM 
                           SET CODRECURSO=NULL, STATUS=VDST.FMOVPDTESTOCK,
                               CODOPEMODIF = :CODOPE, FECMODIF = VD.FECHASYS, HORAMODIF = VD.HORASYS
                         WHERE CODMOV=:CODMOV;   

CURSOR=CSELLOTEYCANTIDADBUL SELECT CANTIDAD,
                                   FLOOR(CANTIDAD/ART.UNIEMB) CAJAS,
                                   DECODE(ART.UNIPAQ,0,0,FLOOR(MOD(CANTIDAD,ART.UNIEMB)/ART.UNIPAQ)) ENVASES,
								   DECODE(ART.UNIPAQ,0,MOD(CANTIDAD,ART.UNIEMB),MOD(MOD(CANTIDAD,ART.UNIEMB),ART.UNIPAQ)) UNIDADES,
                                   ART.UNIEMB,ART.UNIPAQ
                              FROM VDMOVIM MOV,VDARTIC ART WHERE MOV.CODMOV=:CODMOV AND MOV.CODART=ART.CODART;

#CURSOR=CCARGASTOCK SELECT SUM(CANTIDAD) SKORIG,ORDENSTK
#                     FROM VDSTOCK 
#                    WHERE CODMAT=:CODMATORI AND CODART=:CODART
#                   GROUP BY ORDENSTK;

CURSOR=CCARGASTOCK SELECT SUM(CANTIDAD) SKORIG
                     FROM VDSTOCK 
                    WHERE CODMAT=:CODMATORI AND CODART=:CODART;
				   
